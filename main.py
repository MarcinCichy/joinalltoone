# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'main_join_all_files.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import sys
import os
import fnmatch
import pathlib
from PyQt5.QtWidgets import QDialog, QApplication, QFileDialog, QRadioButton, QGroupBox
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtGui import QIcon

global file_type                # deklaracje zmiennej globalnej, aby była widoczna we wszystkich metodach
file_type = 'py'

path = pathlib.Path.cwd()


class Ui_MainWindow(object):
    def __init__(self):
        self.icons_list = None
        self.icon_index = 0
        self.icons = None
        self.status_item = {}


    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1042, 593)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.groupBox = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox.setGeometry(QtCore.QRect(10, 70, 111, 81))
        self.groupBox.setObjectName("groupBox")
        self.radioButton = QtWidgets.QRadioButton(self.groupBox)
        self.radioButton.setGeometry(QtCore.QRect(10, 20, 82, 18))
        self.radioButton.setObjectName("radioButton")
        self.radioButton_2 = QtWidgets.QRadioButton(self.groupBox)
        self.radioButton_2.setGeometry(QtCore.QRect(10, 40, 82, 18))
        self.radioButton_2.setObjectName("radioButton_2")
        self.lineEdit = QtWidgets.QLineEdit(self.groupBox)
        self.lineEdit.setGeometry(QtCore.QRect(60, 40, 41, 20))
        self.lineEdit.setObjectName("lineEdit")
        self.groupBox_2 = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox_2.setGeometry(QtCore.QRect(130, 10, 611, 471))
        self.groupBox_2.setObjectName("groupBox_2")
        self.textEdit = QtWidgets.QTextEdit(self.groupBox_2)
        self.textEdit.setGeometry(QtCore.QRect(10, 30, 571, 421))
        self.textEdit.setObjectName("textEdit")
        self.horizontalScrollBar = QtWidgets.QScrollBar(self.groupBox_2)
        self.horizontalScrollBar.setGeometry(QtCore.QRect(10, 440, 561, 16))
        self.horizontalScrollBar.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalScrollBar.setObjectName("horizontalScrollBar")
        self.verticalScrollBar = QtWidgets.QScrollBar(self.groupBox_2)
        self.verticalScrollBar.setGeometry(QtCore.QRect(570, 30, 17, 411))
        self.verticalScrollBar.setMinimumSize(QtCore.QSize(16, 411))
        self.verticalScrollBar.setOrientation(QtCore.Qt.Vertical)
        self.verticalScrollBar.setObjectName("verticalScrollBar")
        self.groupBox_3 = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox_3.setGeometry(QtCore.QRect(750, 10, 281, 471))
        self.groupBox_3.setObjectName("groupBox_3")
        self.verticalScrollBar_2 = QtWidgets.QScrollBar(self.groupBox_3)
        self.verticalScrollBar_2.setGeometry(QtCore.QRect(310, 10, 16, 501))
        self.verticalScrollBar_2.setOrientation(QtCore.Qt.Vertical)
        self.verticalScrollBar_2.setObjectName("verticalScrollBar_2")
        self.listWidget = QtWidgets.QListWidget(self.groupBox_3)
        self.listWidget.setGeometry(QtCore.QRect(10, 30, 251, 431))
        self.listWidget.setObjectName("listWidget")
        self.horizontalScrollBar_2 = QtWidgets.QScrollBar(self.groupBox_3)
        self.horizontalScrollBar_2.setGeometry(QtCore.QRect(10, 440, 231, 20))
        self.horizontalScrollBar_2.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalScrollBar_2.setObjectName("horizontalScrollBar_2")
        self.verticalScrollBar_3 = QtWidgets.QScrollBar(self.groupBox_3)
        self.verticalScrollBar_3.setGeometry(QtCore.QRect(240, 30, 20, 411))
        self.verticalScrollBar_3.setOrientation(QtCore.Qt.Vertical)
        self.verticalScrollBar_3.setObjectName("verticalScrollBar_3")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(10, 20, 101, 23))
        self.pushButton.setObjectName("pushButton")
        self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_2.setGeometry(QtCore.QRect(750, 500, 91, 21))
        self.pushButton_2.setObjectName("pushButton_2")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1042, 20))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusBar = QtWidgets.QStatusBar(MainWindow)
        self.statusBar.setObjectName("statusBar")
        MainWindow.setStatusBar(self.statusBar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        #  dot. sygnałów przycisku do otwierania okna dialogowego  z wyborem pliku
        self.pushButton.clicked.connect(self.open_file_dialog)
        self.listWidget.itemClicked.connect(self.on_item_clicked)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.groupBox.setTitle(_translate("MainWindow", "File Extension"))
        self.radioButton.setText(_translate("MainWindow", "PY"))
        self.radioButton_2.setText(_translate("MainWindow", "Other"))
        self.groupBox_2.setTitle(_translate("MainWindow", "Joined All Files"))
        self.groupBox_3.setTitle(_translate("MainWindow", "Files to Select"))
        self.pushButton.setText(_translate("MainWindow", "Select Folder"))
        self.pushButton_2.setText(_translate("MainWindow", "JOIN"))

    def open_file_dialog(self):
        self.status_item = {}
        self.textEdit.clear()
        self.listWidget.clear()
        folderpath = QtWidgets.QFileDialog.getExistingDirectory(None, 'Wybierz Folder')

        for file_name in os.listdir(folderpath):
            if fnmatch.fnmatch(file_name, '*.' + file_type):
                item = QtWidgets.QListWidgetItem(file_name)
                item.setIcon(QIcon("red_checkmark.png"))
                self.status_item[item.text()] = False
                self.listWidget.addItem(item)

    def on_item_clicked(self, item):
        current_status = self.status_item.get(item.text(), False)
        new_status = not current_status
        self.status_item[item.text()] = new_status
        print(self.status_item)
        self.change_icon(new_status, item)

    @staticmethod
    def change_icon(new_status, item):
        if not new_status:
            item.setIcon(QIcon("red_checkmark.png"))
        else:
            item.setIcon(QIcon("green_checkmark.png"))


if __name__ == "__main__":
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
